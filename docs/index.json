{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API reference | wan24-I8N",
    "keywords": "API reference Choose a type from the left to start browsing."
  },
  "api/wan24.I8N.I8NCompressedTranslationTerms.html": {
    "href": "api/wan24.I8N.I8NCompressedTranslationTerms.html",
    "title": "Class I8NCompressedTranslationTerms | wan24-I8N",
    "keywords": "Class I8NCompressedTranslationTerms i8n keyword catalog translation terms Inheritance object PluralTranslationTerms I8NCompressedTranslationTerms Implements ITranslationTerms IReadOnlyDictionary<string, string> IReadOnlyCollection<KeyValuePair<string, string>> IEnumerable<KeyValuePair<string, string>> IEnumerable IStringLocalizer Inherited Members PluralTranslationTerms.GetTerm(in string, params string[]) PluralTranslationTerms.GetTerm(in string, in int, params string[]) PluralTranslationTerms.ContainsKey(string) PluralTranslationTerms.TryGetValue(string, out string) PluralTranslationTerms.GetEnumerator() PluralTranslationTerms.StringLocalizer(string, object[]) PluralTranslationTerms.Terms PluralTranslationTerms.PluralSupport PluralTranslationTerms.this[string, string[]] PluralTranslationTerms.this[string, int, string[]] PluralTranslationTerms.Keys PluralTranslationTerms.Values PluralTranslationTerms.Count object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8N Assembly: wan24I8NCompressed.dll Syntax public class I8NCompressedTranslationTerms : PluralTranslationTerms, ITranslationTerms, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IStringLocalizer Remarks Constructor Constructors | Edit this page View Source I8NCompressedTranslationTerms(in Dictionary<string, string[]>) i8n keyword catalog translation terms Declaration public I8NCompressedTranslationTerms(in Dictionary<string, string[]> catalog) Parameters Type Name Description Dictionary<string, string[]> catalog Catalog Remarks Constructor Fields | Edit this page View Source HEADER_COMPRESSION_FLAG i8n file structure header byte compression flag (bit 8) Declaration public const int HEADER_COMPRESSION_FLAG = 128 Field Value Type Description int | Edit this page View Source VERSION i8n version number Declaration public const int VERSION = 1 Field Value Type Description int Methods | Edit this page View Source FromStream(in Stream, in bool, in bool) Create from stream Declaration public static I8NCompressedTranslationTerms FromStream(in Stream stream, in bool noHeader = false, in bool uncompress = true) Parameters Type Name Description Stream stream Stream bool noHeader Skip reading the header bool uncompress Uncompress? Returns Type Description I8NCompressedTranslationTerms Translation terms | Edit this page View Source FromStreamAsync(Stream, bool, bool, CancellationToken) Create from stream Declaration public static Task<I8NCompressedTranslationTerms> FromStreamAsync(Stream stream, bool noHeader = false, bool uncompress = true, CancellationToken cancellationToken = default) Parameters Type Name Description Stream stream Stream bool noHeader Skip reading the header bool uncompress Uncompress? CancellationToken cancellationToken Cancellation token Returns Type Description Task<I8NCompressedTranslationTerms> Translation terms Implements wan24.Core.ITranslationTerms IReadOnlyDictionary<TKey, TValue> IReadOnlyCollection<T> IEnumerable<T> IEnumerable IStringLocalizer"
  },
  "api/wan24.I8N.I8NTranslationTerms.html": {
    "href": "api/wan24.I8N.I8NTranslationTerms.html",
    "title": "Class I8NTranslationTerms | wan24-I8N",
    "keywords": "Class I8NTranslationTerms i8n JSON translation terms Inheritance object PluralTranslationTerms I8NTranslationTerms Implements ITranslationTerms IReadOnlyDictionary<string, string> IReadOnlyCollection<KeyValuePair<string, string>> IEnumerable<KeyValuePair<string, string>> IEnumerable IStringLocalizer Inherited Members PluralTranslationTerms.GetTerm(in string, params string[]) PluralTranslationTerms.GetTerm(in string, in int, params string[]) PluralTranslationTerms.ContainsKey(string) PluralTranslationTerms.TryGetValue(string, out string) PluralTranslationTerms.GetEnumerator() PluralTranslationTerms.StringLocalizer(string, object[]) PluralTranslationTerms.Terms PluralTranslationTerms.PluralSupport PluralTranslationTerms.this[string, string[]] PluralTranslationTerms.this[string, int, string[]] PluralTranslationTerms.Keys PluralTranslationTerms.Values PluralTranslationTerms.Count object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8N Assembly: wan24I8N.dll Syntax public class I8NTranslationTerms : PluralTranslationTerms, ITranslationTerms, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IStringLocalizer Remarks Constructor Constructors | Edit this page View Source I8NTranslationTerms(in Dictionary<string, string[]>) i8n JSON translation terms Declaration public I8NTranslationTerms(in Dictionary<string, string[]> catalog) Parameters Type Name Description Dictionary<string, string[]> catalog Catalog Remarks Constructor Fields | Edit this page View Source HEADER_COMPRESSION_FLAG i8n file structure header byte compression flag (bit 8) Declaration public const int HEADER_COMPRESSION_FLAG = 128 Field Value Type Description int | Edit this page View Source VERSION i8n version number Declaration public const int VERSION = 1 Field Value Type Description int Methods | Edit this page View Source FromStream(in Stream, in bool) Create from stream Declaration public static I8NTranslationTerms FromStream(in Stream stream, in bool noHeader = false) Parameters Type Name Description Stream stream Stream bool noHeader Skip reading the header Returns Type Description I8NTranslationTerms Translation terms | Edit this page View Source FromStreamAsync(Stream, bool, CancellationToken) Create from stream Declaration public static Task<I8NTranslationTerms> FromStreamAsync(Stream stream, bool noHeader = false, CancellationToken cancellationToken = default) Parameters Type Name Description Stream stream Stream bool noHeader Skip reading the header CancellationToken cancellationToken Cancellation token Returns Type Description Task<I8NTranslationTerms> Translation terms Implements wan24.Core.ITranslationTerms IReadOnlyDictionary<TKey, TValue> IReadOnlyCollection<T> IEnumerable<T> IEnumerable IStringLocalizer"
  },
  "api/wan24.I8N.html": {
    "href": "api/wan24.I8N.html",
    "title": "Namespace wan24.I8N | wan24-I8N",
    "keywords": "Namespace wan24.I8N Classes I8NCompressedTranslationTerms i8n keyword catalog translation terms I8NTranslationTerms i8n JSON translation terms"
  },
  "api/wan24.I8NKws.I8NKwsTranslationTerms.html": {
    "href": "api/wan24.I8NKws.I8NKwsTranslationTerms.html",
    "title": "Class I8NKwsTranslationTerms | wan24-I8N",
    "keywords": "Class I8NKwsTranslationTerms i8n keyword catalog translation terms Inheritance object PluralTranslationTerms I8NKwsTranslationTerms Implements ITranslationTerms IReadOnlyDictionary<string, string> IReadOnlyCollection<KeyValuePair<string, string>> IEnumerable<KeyValuePair<string, string>> IEnumerable IStringLocalizer Inherited Members PluralTranslationTerms.GetTerm(in string, params string[]) PluralTranslationTerms.GetTerm(in string, in int, params string[]) PluralTranslationTerms.ContainsKey(string) PluralTranslationTerms.TryGetValue(string, out string) PluralTranslationTerms.GetEnumerator() PluralTranslationTerms.StringLocalizer(string, object[]) PluralTranslationTerms.Terms PluralTranslationTerms.PluralSupport PluralTranslationTerms.this[string, string[]] PluralTranslationTerms.this[string, int, string[]] PluralTranslationTerms.Keys PluralTranslationTerms.Values PluralTranslationTerms.Count object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8NKws Assembly: wan24I8NKws.dll Syntax public class I8NKwsTranslationTerms : PluralTranslationTerms, ITranslationTerms, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IStringLocalizer Remarks Constructor Constructors | Edit this page View Source I8NKwsTranslationTerms(in KwsCatalog) i8n keyword catalog translation terms Declaration public I8NKwsTranslationTerms(in KwsCatalog catalog) Parameters Type Name Description KwsCatalog catalog Catalog Remarks Constructor Methods | Edit this page View Source FromStream(in Stream) Create from stream Declaration public static I8NKwsTranslationTerms FromStream(in Stream stream) Parameters Type Name Description Stream stream Stream Returns Type Description I8NKwsTranslationTerms Catalog | Edit this page View Source FromStreamAsync(Stream, CancellationToken) Create from stream Declaration public static Task<I8NKwsTranslationTerms> FromStreamAsync(Stream stream, CancellationToken cancellationToken = default) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<I8NKwsTranslationTerms> Catalog Implements wan24.Core.ITranslationTerms IReadOnlyDictionary<TKey, TValue> IReadOnlyCollection<T> IEnumerable<T> IEnumerable IStringLocalizer"
  },
  "api/wan24.I8NKws.KwsCatalog.html": {
    "href": "api/wan24.I8NKws.KwsCatalog.html",
    "title": "Class KwsCatalog | wan24-I8N",
    "keywords": "Class KwsCatalog KWS catalog Inheritance object KwsCatalog Implements IEnumerable<KwsKeyword> IEnumerable IEquatable<KwsCatalog> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8NKws Assembly: wan24I8NKws.dll Syntax public sealed record KwsCatalog : IEnumerable<KwsKeyword>, IEnumerable, IEquatable<KwsCatalog> Constructors | Edit this page View Source KwsCatalog() Constructor Declaration public KwsCatalog() | Edit this page View Source KwsCatalog(in Dictionary<string, string[]>) Constructor Declaration public KwsCatalog(in Dictionary<string, string[]> dict) Parameters Type Name Description Dictionary<string, string[]> dict Dictionary | Edit this page View Source KwsCatalog(in Dictionary<string, string>) Constructor Declaration public KwsCatalog(in Dictionary<string, string> dict) Parameters Type Name Description Dictionary<string, string> dict Dictionary Properties | Edit this page View Source CompleteKeywords Complete keywords (non-obsolete) Declaration [NoValidation(false)] public IEnumerable<KwsKeyword> CompleteKeywords { get; } Property Value Type Description IEnumerable<KwsKeyword> | Edit this page View Source Created Created time (UTC) Declaration public DateTime Created { get; set; } Property Value Type Description DateTime | Edit this page View Source FuzzyKeywords Fuzzy keywords (non-onsolete) Declaration [NoValidation(false)] public IEnumerable<KwsKeyword> FuzzyKeywords { get; } Property Value Type Description IEnumerable<KwsKeyword> | Edit this page View Source IncompleteKeywords Incomplete keywords (non-obsolete) Declaration [NoValidation(false)] public IEnumerable<KwsKeyword> IncompleteKeywords { get; } Property Value Type Description IEnumerable<KwsKeyword> | Edit this page View Source InvalidKeywords Invalid keywords (non-onsolete) Declaration [NoValidation(false)] public IEnumerable<KwsKeyword> InvalidKeywords { get; } Property Value Type Description IEnumerable<KwsKeyword> | Edit this page View Source this[string] Get a keyword Declaration public KwsKeyword? this[string id] { get; } Parameters Type Name Description string id ID Property Value Type Description KwsKeyword Keyword | Edit this page View Source Keywords Keywords Declaration [NoValidation(false)] public HashSet<KwsKeyword> Keywords { get; init; } Property Value Type Description HashSet<KwsKeyword> | Edit this page View Source KeywordsWithDeveloperComments Keywords with developer comments (non-onsolete) Declaration [NoValidation(false)] public IEnumerable<KwsKeyword> KeywordsWithDeveloperComments { get; } Property Value Type Description IEnumerable<KwsKeyword> | Edit this page View Source Locale Locale identifier (en-US for example) Declaration [RegularExpression(\"^([a-z]{2})-([A-Z]{2})$\")] public string Locale { get; set; } Property Value Type Description string | Edit this page View Source Modified Modified time (UTC) Declaration public DateTime Modified { get; set; } Property Value Type Description DateTime | Edit this page View Source NonObsoleteKeywords Non-obsolete keywords Declaration [NoValidation(false)] public IEnumerable<KwsKeyword> NonObsoleteKeywords { get; } Property Value Type Description IEnumerable<KwsKeyword> | Edit this page View Source ObsoleteKeywords Obsolete keywords Declaration [NoValidation(false)] public IEnumerable<KwsKeyword> ObsoleteKeywords { get; } Property Value Type Description IEnumerable<KwsKeyword> | Edit this page View Source Project Project name Declaration public string Project { get; set; } Property Value Type Description string | Edit this page View Source Properties Properties Declaration public Dictionary<string, string> Properties { get; init; } Property Value Type Description Dictionary<string, string> | Edit this page View Source RevisionedKeywords Revisioned keywords (non-onsolete) Declaration [NoValidation(false)] public IEnumerable<KwsKeyword> RevisionedKeywords { get; } Property Value Type Description IEnumerable<KwsKeyword> | Edit this page View Source RightToLeft If the text is written right to left Declaration public bool RightToLeft { get; set; } Property Value Type Description bool | Edit this page View Source Translator Translator name Declaration public string Translator { get; set; } Property Value Type Description string | Edit this page View Source UnvalidatedKeywords Unvalidated keywords Declaration [NoValidation(false)] public IEnumerable<KwsKeyword> UnvalidatedKeywords { get; } Property Value Type Description IEnumerable<KwsKeyword> Methods | Edit this page View Source ContainsKeyWord(string) Determine if a keyword is contained Declaration public bool ContainsKeyWord(string id) Parameters Type Name Description string id ID Returns Type Description bool If the keyword is contained | Edit this page View Source GetEnumerator() Returns an enumerator that iterates through the collection. Declaration public IEnumerator<KwsKeyword> GetEnumerator() Returns Type Description IEnumerator<KwsKeyword> An enumerator that can be used to iterate through the collection. | Edit this page View Source GetOrAddKeyword(KwsKeyword) Add a new keyword Declaration public KwsKeyword GetOrAddKeyword(KwsKeyword keyword) Parameters Type Name Description KwsKeyword keyword Keyword Returns Type Description KwsKeyword Added or existing keyword | Edit this page View Source Merge(KwsCatalog, bool) Merge with another catalog (existing keywords will be revisioned for merging) Declaration public KwsKeyword[] Merge(KwsCatalog other, bool ignoreLocale = false) Parameters Type Name Description KwsCatalog other Other catalog to merge into this catalog bool ignoreLocale Ignore merging with another locale? Returns Type Description KwsKeyword[] Merged existing keywords | Edit this page View Source ToDictionary() Convert to a dictionary (only non-obsolete keywords) Declaration public Dictionary<string, string[]> ToDictionary() Returns Type Description Dictionary<string, string[]> Dictionary | Edit this page View Source TryAddKeyword(in KwsKeyword) Try adding a new keyword Declaration public bool TryAddKeyword(in KwsKeyword keyword) Parameters Type Name Description KwsKeyword keyword Keyword Returns Type Description bool If added | Edit this page View Source TryRemoveKeyword(string) Remove a keyword Declaration public bool TryRemoveKeyword(string id) Parameters Type Name Description string id iD Returns Type Description bool If removed | Edit this page View Source Validate(in bool, in bool) Validate the catalog (any keyword is required) Declaration public bool Validate(in bool throwOnError = true, in bool requireCompleteTranslations = false) Parameters Type Name Description bool throwOnError Throw an exception on error? bool requireCompleteTranslations Require all translations to be complete? Returns Type Description bool If the catalog is valid Exceptions Type Condition InvalidDataException Catalog is invalid Operators | Edit this page View Source implicit operator int(in KwsCatalog) Cast as keyword count Declaration public static implicit operator int(in KwsCatalog catalog) Parameters Type Name Description KwsCatalog catalog Catalog Returns Type Description int Implements IEnumerable<T> IEnumerable IEquatable<T>"
  },
  "api/wan24.I8NKws.KwsKeyword.html": {
    "href": "api/wan24.I8NKws.KwsKeyword.html",
    "title": "Class KwsKeyword | wan24-I8N",
    "keywords": "Class KwsKeyword KWS keyword record Inheritance object KwsKeyword Implements IEquatable<KwsKeyword> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8NKws Assembly: wan24I8NKws.dll Syntax public sealed record KwsKeyword : IEquatable<KwsKeyword> Constructors | Edit this page View Source KwsKeyword() Constructor Declaration public KwsKeyword() | Edit this page View Source KwsKeyword(in string) Constructor Declaration public KwsKeyword(in string id) Parameters Type Name Description string id ID Properties | Edit this page View Source DeveloperComments Developer comments Declaration public string DeveloperComments { get; set; } Property Value Type Description string | Edit this page View Source Document If this keyword is a large document Declaration public bool Document { get; set; } Property Value Type Description bool | Edit this page View Source Extracted Extracted time (UTC) Declaration public DateTime Extracted { get; set; } Property Value Type Description DateTime | Edit this page View Source Fuzzy If the update of the ID has been done automatic using fuzzy logic search Declaration public bool Fuzzy { get; set; } Property Value Type Description bool | Edit this page View Source ID ID (keyword) Declaration [MinLength(1)] public string ID { get; } Property Value Type Description string | Edit this page View Source IdLiteral ID literal Declaration [JsonIgnore] [NoValidation(false)] public string IdLiteral { get; } Property Value Type Description string | Edit this page View Source Invalid If the keyword is invalid Declaration public bool Invalid { get; set; } Property Value Type Description bool | Edit this page View Source this[int] Get a plural translation Declaration public string this[in int count] { get; } Parameters Type Name Description int count Count Property Value Type Description string Translation | Edit this page View Source Obsolete If this keyword is obsolete and should not be exported Declaration public bool Obsolete { get; set; } Property Value Type Description bool | Edit this page View Source Properties Properties Declaration public Dictionary<string, string> Properties { get; init; } Property Value Type Description Dictionary<string, string> | Edit this page View Source Revisions Revisions of this keyword Declaration public HashSet<KwsKeyword> Revisions { get; init; } Property Value Type Description HashSet<KwsKeyword> | Edit this page View Source SourceReferences Source references Declaration public HashSet<KwsSourceReference> SourceReferences { get; init; } Property Value Type Description HashSet<KwsSourceReference> | Edit this page View Source TranslationMissing If a translation is missing (no translation at all, or any empty translation) Declaration [JsonIgnore] [NoValidation(false)] public bool TranslationMissing { get; } Property Value Type Description bool | Edit this page View Source Translations Translations Declaration public List<string> Translations { get; init; } Property Value Type Description List<string> | Edit this page View Source Translator Latest translator name Declaration public string Translator { get; set; } Property Value Type Description string | Edit this page View Source TranslatorComments Translator comments Declaration public string TranslatorComments { get; set; } Property Value Type Description string | Edit this page View Source Updated Updated time (UTC) Declaration public DateTime Updated { get; set; } Property Value Type Description DateTime Methods | Edit this page View Source CreateRevision() Create a revision from this keyword Declaration public void CreateRevision() | Edit this page View Source Merge(KwsKeyword) Merge with another keyword Declaration public void Merge(KwsKeyword other) Parameters Type Name Description KwsKeyword other Other keyword | Edit this page View Source Plural(in int) Get a plural translation Declaration public string Plural(in int count) Parameters Type Name Description int count Count Returns Type Description string Translation | Edit this page View Source RestoreRevision(in KwsKeyword) Restore a revision (will remove the revision and all newer revisions) Declaration public void RestoreRevision(in KwsKeyword revision) Parameters Type Name Description KwsKeyword revision Revision to restore | Edit this page View Source UpdateId(in string) Update the ID (wll create a new revision and clear source references, too; won't set Updated) Declaration public void UpdateId(in string newId) Parameters Type Name Description string newId New ID | Edit this page View Source Validate(in bool, in bool) Validate the keyword Declaration public bool Validate(in bool throwOnError = true, in bool requireCompleteTranslations = false) Parameters Type Name Description bool throwOnError Throw an exception on error? bool requireCompleteTranslations Require all translations to be complete? Returns Type Description bool If the keyword is valid Exceptions Type Condition InvalidDataException Keyword is invalid Implements IEquatable<T>"
  },
  "api/wan24.I8NKws.KwsSourceReference.html": {
    "href": "api/wan24.I8NKws.KwsSourceReference.html",
    "title": "Class KwsSourceReference | wan24-I8N",
    "keywords": "Class KwsSourceReference KWS source reference Inheritance object KwsSourceReference Implements IEquatable<KwsSourceReference> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8NKws Assembly: wan24I8NKws.dll Syntax public sealed record KwsSourceReference : IEquatable<KwsSourceReference> Constructors | Edit this page View Source KwsSourceReference() Constructor Declaration public KwsSourceReference() Properties | Edit this page View Source FileName Filename Declaration [MinLength(1)] public required string FileName { get; init; } Property Value Type Description string | Edit this page View Source LineNumber Line number (starts with 1) Declaration [Range(1, 2147483647)] public required int LineNumber { get; init; } Property Value Type Description int Implements IEquatable<T>"
  },
  "api/wan24.I8NKws.html": {
    "href": "api/wan24.I8NKws.html",
    "title": "Namespace wan24.I8NKws | wan24-I8N",
    "keywords": "Namespace wan24.I8NKws Classes I8NKwsTranslationTerms i8n keyword catalog translation terms KwsCatalog KWS catalog KwsKeyword KWS keyword record KwsSourceReference KWS source reference"
  },
  "api/wan24.I8NTool.I8NApi.html": {
    "href": "api/wan24.I8NTool.I8NApi.html",
    "title": "Class I8NApi | wan24-I8N",
    "keywords": "Class I8NApi i8n API Inheritance object I8NApi Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8NTool Assembly: wan24I8NTool.dll Syntax [CliApi(\"i8n\", false)] [DisplayText(\"Internationalization\")] public sealed class I8NApi Constructors | Edit this page View Source I8NApi() Constructor Declaration public I8NApi() Fields | Edit this page View Source HEADER_COMPRESSION_FLAG i8n file structure header byte compression flag (bit 8) Declaration public const int HEADER_COMPRESSION_FLAG = 128 Field Value Type Description int Properties | Edit this page View Source FailOnError Fail on error? Declaration [CliApi(\"failOnError\", false)] [DisplayText(\"Fail on error\")] public static bool FailOnError { get; set; } Property Value Type Description bool Methods | Edit this page View Source BuildAsync(string[]?, string[]?, string[]?, string[]?, string?, bool, bool, bool, bool, bool, bool, bool, bool, CancellationToken) Build an internationalization file from multiple input sources Declaration [CliApi(\"build\", false, IsDefault = true)] [DisplayText(\"Build i8n file\")] [StdIn(\"/path/to/input.(json|po|mo)\", false)] [StdOut(\"/path/to/output.i8n\", false)] [StdErr(\"Verbose output and errors\")] public static Task BuildAsync(string[]? jsonInput = null, string[]? kwsInput = null, string[]? poInput = null, string[]? moInput = null, string? output = null, bool compress = false, bool json = false, bool kws = false, bool po = false, bool mo = false, bool noHeader = false, bool verbose = false, bool failOnExistingKey = false, CancellationToken cancellationToken = default) Parameters Type Name Description string[] jsonInput JSON (UTF-8) input filenames string[] kwsInput wan24-I8NKws JSON (UTF-8) input filenames string[] poInput PO (gettext) input filenames string[] moInput MO (gettext) input filenames string output Internationalization output filename (if not given, STDOUT will be used; existing file will be overwritten) bool compress To compress the internationalization file bool json To read JSON (UTF-8) from STDIN bool kws To read wan24-I8NKws JSON (UTF-8) from STDIN bool po To read PO (gettext) from STDIN bool mo To read MO (gettext) from STDIN bool noHeader To skip writing a header with the version number and the compression flag bool verbose Write verbose informations to STDERR bool failOnExistingKey To fail, if an existing key would be overwritten by an additional source CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source BuildManyAsync(string, string, string, string, string, string, string, string, string[]?, bool, bool, bool, bool) Build many internationalization (i8n) files from JSON (UTF-8) and/or PO/MO (gettext) source files (output filename is the input filename with the .i8n extension instead - existing files will be overwritten; default is to convert all *.json/po/mo files in the working folder) Declaration [CliApi(\"buildmany\", false)] [DisplayText(\"Build i8n files\")] [StdErr(\"Verbose output and errors\")] [ExitCode(0, \"Ok\")] [ExitCode(1, \"Had errors\")] public static Task<int> BuildManyAsync(string jsonInput = \"./\", string jsonInputPattern = \"*.json\", string kwsInput = \"./\", string kwsInputPattern = \"*.kws\", string poInput = \"./\", string poInputPattern = \"*.po\", string moInput = \"./\", string moInputPattern = \"*.mo\", string[]? exclude = null, bool compress = false, bool noHeader = false, bool singleThread = false, bool verbose = false) Parameters Type Name Description string jsonInput JSON input file (UTF-8) folder (no recursion) string jsonInputPattern JSON input pattern string kwsInput wan24-I8NKws JSON input file (UTF-8) folder (no recursion) string kwsInputPattern wan24-I8NKws JSON input pattern string poInput PO (gettext) input file folder (no recursion) string poInputPattern PO input pattern string moInput MO (gettext) input file folder (no recursion) string moInputPattern MO input pattern string[] exclude Path to excluded source files (absolute path or filename only (\"*\" (any or none) and \"+\" (one or many) may be used as wildcard); case insensitive) bool compress To compress the internationalization files bool noHeader To skip writing a header with the version number and the compression flag bool singleThread Disable multi-threading? bool verbose Write verbose informations to STDERR Returns Type Description Task<int> Exit code | Edit this page View Source DisplayAsync(string?, bool, bool) Display internationalization file informations Declaration [CliApi(\"display\", false)] [DisplayText(\"Display i8n file\")] [StdIn(\"/path/to/input.i8n\", false)] [StdErr(\"Output and errors\")] public static Task DisplayAsync(string? input = null, bool uncompress = false, bool noHeader = false) Parameters Type Name Description string input Internationalization input filename (if not given, STDIN will be used) bool uncompress To uncompress the internationalization file (not required to use, if a header will be red) bool noHeader To skip reading a header with the version number and the compression flag Returns Type Description Task | Edit this page View Source ExtractAsync(string?, bool, string?, string?, string?, bool, bool, bool, bool, bool) Extract an internationalization file Declaration [CliApi(\"extract\", false)] [DisplayText(\"Extract i8n file\")] [StdIn(\"/path/to/input.i8n\", false)] [StdOut(\"/path/to/output.(json|po)\", false)] [StdErr(\"Verbose output and errors\")] public static Task ExtractAsync(string? input = null, bool uncompress = false, string? jsonOutput = null, string? kwsOutput = null, string? poOutput = null, bool json = false, bool kws = false, bool po = false, bool noHeader = false, bool verbose = false) Parameters Type Name Description string input Internationalization input filename (if not given, STDIN will be used) bool uncompress To uncompress the internationalization file (not required to use, if a header will be red) string jsonOutput JSON (UTF-8) output filename string kwsOutput wan24-I8NKws JSON (UTF-8) output filename string poOutput PO (gettext) output filename bool json To write JSON (UTF-8) to STDOUT bool kws To write wan24-I8NKws JSON (UTF-8) to STDOUT bool po To write PO (gettext) (UTF-8) to STDOUT bool noHeader To skip reading a header with the version number and the compression flag bool verbose Write verbose informations to STDERR Returns Type Description Task"
  },
  "api/wan24.I8NTool.I8NToolAppConfig.html": {
    "href": "api/wan24.I8NTool.I8NToolAppConfig.html",
    "title": "Class I8NToolAppConfig | wan24-I8N",
    "keywords": "Class I8NToolAppConfig i8n tool app configuration Inheritance object AppConfigBase I8NToolAppConfig Implements IAppConfig Inherited Members AppConfigBase.Applied object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8NTool Assembly: wan24I8NTool.dll Syntax public sealed class I8NToolAppConfig : AppConfigBase, IAppConfig Constructors | Edit this page View Source I8NToolAppConfig() Constructor Declaration public I8NToolAppConfig() | Edit this page View Source I8NToolAppConfig(in bool) Constructor Declaration public I8NToolAppConfig(in bool setApplied) Parameters Type Name Description bool setApplied Set as the applied configuration? Properties | Edit this page View Source AppliedI8NConfig Applied i8n tool app configuration Declaration public static I8NToolAppConfig? AppliedI8NConfig { get; } Property Value Type Description I8NToolAppConfig | Edit this page View Source ApplyConfig Apply a configuration from the CLI configuration Declaration [CliConfig] public static string ApplyConfig { set; } Property Value Type Description string | Edit this page View Source CLI CLI app configuration Declaration public CliAppConfig? CLI { get; set; } Property Value Type Description CliAppConfig | Edit this page View Source Core Core app configuration Declaration public AppConfig? Core { get; set; } Property Value Type Description AppConfig | Edit this page View Source Encoding Text encoding of the source files (may be any encoding (web) identifier) Declaration public string? Encoding { get; set; } Property Value Type Description string | Edit this page View Source Exclude Path to excluded source files (absolute path or filename only (\"*\" (any or none) and \"+\" (one or many) may be used as wildcard); case insensitive) Declaration public static string[]? Exclude { get; } Property Value Type Description string[] | Edit this page View Source FailOnError Fail the whole process on any error? Declaration public bool FailOnError { get; set; } Property Value Type Description bool | Edit this page View Source FileExtensions File extensions to look for (including dot) Declaration public string[]? FileExtensions { get; set; } Property Value Type Description string[] | Edit this page View Source Merge Merge this configuration with the default configuration? Declaration public bool Merge { get; set; } Property Value Type Description bool | Edit this page View Source MergeOutput Merge the PO contents with an existing output PO file? Declaration public bool MergeOutput { get; set; } Property Value Type Description bool | Edit this page View Source Patterns Custom search(/replace) regular expression patterns Declaration public KeywordParserPattern[]? Patterns { get; set; } Property Value Type Description KeywordParserPattern[] | Edit this page View Source SingleThread true to disable multi-threading (process only one source file per time) Declaration public bool SingleThread { get; set; } Property Value Type Description bool | Edit this page View Source TextFileExtensions File extensions of text files to translate (including dot; keyword ID will be the filename without extension) Declaration public string[]? TextFileExtensions { get; } Property Value Type Description string[] Methods | Edit this page View Source Apply() Apply this app configuration Declaration public override void Apply() Overrides wan24.Core.AppConfigBase.Apply() | Edit this page View Source ApplyAsync(CancellationToken) Apply this app configuration Declaration public override Task ApplyAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides AppConfigBase.ApplyAsync(CancellationToken) Implements wan24.Core.IAppConfig"
  },
  "api/wan24.I8NTool.I8NToolConfig.html": {
    "href": "api/wan24.I8NTool.I8NToolConfig.html",
    "title": "Class I8NToolConfig | wan24-I8N",
    "keywords": "Class I8NToolConfig i8n tool configuration Inheritance object I8NToolConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8NTool Assembly: wan24I8NTool.dll Syntax public static class I8NToolConfig Properties | Edit this page View Source Exclude Path to excluded source files (absolute path or filename only (\"*\" (any or none) and \"+\" (one or many) may be used as wildcard); case insensitive) Declaration public static HashSet<string> Exclude { get; } Property Value Type Description HashSet<string> | Edit this page View Source FailOnError Fail the whole process on any error? Declaration public static bool FailOnError { get; set; } Property Value Type Description bool | Edit this page View Source FileExtensions File extensions to look for (including dot) Declaration public static HashSet<string> FileExtensions { get; } Property Value Type Description HashSet<string> | Edit this page View Source MergeOutput Merge the PO contents with an existing output PO file? Declaration public static bool MergeOutput { get; set; } Property Value Type Description bool | Edit this page View Source Patterns Parser patterns Declaration public static HashSet<KeywordParserPattern> Patterns { get; } Property Value Type Description HashSet<KeywordParserPattern> | Edit this page View Source SingleThread Use only a single thread? Declaration public static bool SingleThread { get; set; } Property Value Type Description bool | Edit this page View Source SourceEncoding Source text encoding Declaration public static Encoding SourceEncoding { get; set; } Property Value Type Description Encoding | Edit this page View Source TextFileExtensions File extensions of text files to translate (including dot; keyword ID will be the filename without extension) Declaration public static HashSet<string> TextFileExtensions { get; } Property Value Type Description HashSet<string>"
  },
  "api/wan24.I8NTool.KeywordExtractorApi.html": {
    "href": "api/wan24.I8NTool.KeywordExtractorApi.html",
    "title": "Class KeywordExtractorApi | wan24-I8N",
    "keywords": "Class KeywordExtractorApi PO extractor CLI API Inheritance object KeywordExtractorApi Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8NTool Assembly: wan24I8NTool.dll Syntax [CliApi(\"extractor\", false, IsDefault = true)] [DisplayText(\"PO extractor\")] public sealed class KeywordExtractorApi Constructors | Edit this page View Source KeywordExtractorApi() Constructor Declaration public KeywordExtractorApi() Properties | Edit this page View Source FailOnError Fail on error? Declaration [CliApi(\"failOnError\", false)] [DisplayText(\"Fail on error\")] public static bool FailOnError { get; set; } Property Value Type Description bool Methods | Edit this page View Source ExtractAsync(string?, bool, bool, bool, string[]?, string[]?, string?, string[]?, string[]?, string?, bool, bool, bool, int) Extract keywords from source code Declaration [CliApi(\"extract\", false, IsDefault = true)] [DisplayText(\"Extract\")] [StdIn(\"/path/to/source.cs\", false)] [StdOut(\"/path/to/target.po\", false)] [StdErr(\"Verbose output and errors\")] public static Task ExtractAsync(string? config = null, bool singleThread = false, bool verbose = false, bool noRecursive = false, string[]? ext = null, string[]? textFileExt = null, string? encoding = null, string[]? input = null, string[]? exclude = null, string? output = null, bool noHeader = false, bool mergeOutput = false, bool json = false, int fuzzy = 0) Parameters Type Name Description string config Custom configuration file bool singleThread Disable multi-threading? bool verbose Be verbose? bool noRecursive Disable directory recursion? string[] ext File extensions to use (including dot; will override the configuration) string[] textFileExt File extensions of text files to translate (including dot; keyword ID will be the filename without extension; will override the configuration) string encoding Source text encoding identifier string[] input Input file-/foldernames (may be relative or absolute) string[] exclude Excluded file-/foldernames (absolute path or filename only; will override the configuration) string output Output PO filename (may be relative or absolute) bool noHeader Skip writing a header bool mergeOutput Merge the PO output to the existing PO file bool json Output wan24-I8NKws JSON format int fuzzy Maximum old/new key distance in percent (only when merging) Returns Type Description Task"
  },
  "api/wan24.I8NTool.KeywordMatch.Position.html": {
    "href": "api/wan24.I8NTool.KeywordMatch.Position.html",
    "title": "Class KeywordMatch.Position | wan24-I8N",
    "keywords": "Class KeywordMatch.Position Match position Inheritance object KeywordMatch.Position Implements IEquatable<KeywordMatch.Position> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8NTool Assembly: wan24I8NTool.dll Syntax public sealed record KeywordMatch.Position : IEquatable<KeywordMatch.Position> Constructors | Edit this page View Source Position() Constructor Declaration public Position() Properties | Edit this page View Source FileName Filename Declaration public string? FileName { get; init; } Property Value Type Description string | Edit this page View Source LineNumber Line number Declaration public required int LineNumber { get; init; } Property Value Type Description int Implements IEquatable<T>"
  },
  "api/wan24.I8NTool.KeywordMatch.html": {
    "href": "api/wan24.I8NTool.KeywordMatch.html",
    "title": "Class KeywordMatch | wan24-I8N",
    "keywords": "Class KeywordMatch Parser match Inheritance object KeywordMatch Implements IEquatable<KeywordMatch> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8NTool Assembly: wan24I8NTool.dll Syntax public sealed record KeywordMatch : IEquatable<KeywordMatch> Constructors | Edit this page View Source KeywordMatch() Constructor Declaration public KeywordMatch() Properties | Edit this page View Source Keyword Keyword Declaration public required string Keyword { get; init; } Property Value Type Description string | Edit this page View Source KeywordLiteral Literal keyword Declaration public string KeywordLiteral { get; } Property Value Type Description string | Edit this page View Source KeywordQuotedLiteral Quoted literal keyword Declaration public string KeywordQuotedLiteral { get; } Property Value Type Description string | Edit this page View Source Positions Positions Declaration public HashSet<KeywordMatch.Position> Positions { get; init; } Property Value Type Description HashSet<KeywordMatch.Position> | Edit this page View Source Text Text file contents Declaration public string? Text { get; set; } Property Value Type Description string Implements IEquatable<T>"
  },
  "api/wan24.I8NTool.KeywordParserPattern.html": {
    "href": "api/wan24.I8NTool.KeywordParserPattern.html",
    "title": "Class KeywordParserPattern | wan24-I8N",
    "keywords": "Class KeywordParserPattern i8n tool keyword parser pattern Inheritance object KeywordParserPattern Implements IEquatable<KeywordParserPattern> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.I8NTool Assembly: wan24I8NTool.dll Syntax public sealed record KeywordParserPattern : IEquatable<KeywordParserPattern> Constructors | Edit this page View Source KeywordParserPattern() Constructor Declaration public KeywordParserPattern() Fields | Edit this page View Source ATTRIBUTE_PROPERTIES Attribute properties Declaration public const string ATTRIBUTE_PROPERTIES = \"^.*\\\\(.*(Example|ErrorMessage)\\\\s*\\\\=\\\\s*(\\\\\\\"(\\\\\\\\.|[^\\\\\\\\\\\\\\\"])+[^\\\\\\\\]\\\\\\\").*$\" Field Value Type Description string | Edit this page View Source ATTRIBUTE_PROPERTIES_RPL Replacement for RX_ATTRIBUTE_PROPERTIES Declaration public const string ATTRIBUTE_PROPERTIES_RPL = \"$2\" Field Value Type Description string | Edit this page View Source EXIT_CODE_ATTRIBUTE Exit code attribute Declaration public const string EXIT_CODE_ATTRIBUTE = \"^.*ExitCode[^\\\\(]*\\\\(\\\\d+\\\\s*,\\\\s*(\\\\\\\"(\\\\\\\\.|[^\\\\\\\\\\\\\\\"])+[^\\\\\\\\]\\\\\\\").*$\" Field Value Type Description string | Edit this page View Source EXIT_CODE_ATTRIBUTE_RPL Replacement for RX_EXIT_CODE_ATTRIBUTE Declaration public const string EXIT_CODE_ATTRIBUTE_RPL = \"$1\" Field Value Type Description string | Edit this page View Source INCLUDE_STRINGS Include strings Declaration public const string INCLUDE_STRINGS = \"^.*[^\\\\@\\\\$\\\\\\\"\\\\\\\\](\\\\\\\"(\\\\\\\\.|[^\\\\\\\\\\\\\\\"])+[^\\\\\\\\]\\\\\\\").*wan24I8NTool\\\\:include.*$\" Field Value Type Description string | Edit this page View Source INCLUDE_STRINGS_RPL Replacement for RX_INCLUDE_STRINGS Declaration public const string INCLUDE_STRINGS_RPL = \"$1\" Field Value Type Description string | Edit this page View Source METHODS_AND_ATTRIBUTES Methods and attributes Declaration public const string METHODS_AND_ATTRIBUTES = \"^.*(_+|gettext[nd]?|Translate(Plural)?|Get(Html)?Term|Std(In|OutErr)|Description|DisplayText)\\\\s*\\\\(\\\\s*(\\\\\\\"(\\\\\\\\.|[^\\\\\\\\\\\\\\\"])+[^\\\\\\\\]\\\\\\\").*$\" Field Value Type Description string | Edit this page View Source METHODS_AND_ATTRIBUTES_RPL Replacement for RX_METHODS_AND_ATTRIBUTES Declaration public const string METHODS_AND_ATTRIBUTES_RPL = \"$5\" Field Value Type Description string | Edit this page View Source NORMALIZE1 Normalize a string literal (remove characters before and maybe after) Declaration public const string NORMALIZE1 = \"^.*[^\\\\@\\\\$\\\\\\\"\\\\\\\\](\\\\\\\"(\\\\\\\\.|[^\\\\\\\\\\\\\\\"])+[^\\\\\\\\]\\\\\\\").*$\" Field Value Type Description string | Edit this page View Source NORMALIZE1_RPL Replacement for RX_NORMALIZE1 Declaration public const string NORMALIZE1_RPL = \"$1\" Field Value Type Description string | Edit this page View Source NORMALIZE2 Normalize a string literal without characters before (remove characters after) Declaration public const string NORMALIZE2 = \"^(\\\\\\\"(\\\\\\\\.|[^\\\\\\\\\\\\\\\"])+[^\\\\\\\\]\\\\\\\").+$\" Field Value Type Description string | Edit this page View Source NORMALIZE2_RPL Replacelement for RX_NORMALIZE2 Declaration public const string NORMALIZE2_RPL = \"$1\" Field Value Type Description string | Edit this page View Source RX_ATTRIBUTE_PROPERTIES Attribute properties Declaration public static readonly Regex RX_ATTRIBUTE_PROPERTIES Field Value Type Description Regex | Edit this page View Source RX_EXIT_CODE_ATTRIBUTE Exit code attribute Declaration public static readonly Regex RX_EXIT_CODE_ATTRIBUTE Field Value Type Description Regex | Edit this page View Source RX_INCLUDE_STRINGS Include strings Declaration public static readonly Regex RX_INCLUDE_STRINGS Field Value Type Description Regex | Edit this page View Source RX_METHODS_AND_ATTRIBUTES Methods and attributes Declaration public static readonly Regex RX_METHODS_AND_ATTRIBUTES Field Value Type Description Regex | Edit this page View Source RX_NORMALIZE1 Normalize a string literal (remove characters before and maybe after) Declaration public static readonly Regex RX_NORMALIZE1 Field Value Type Description Regex | Edit this page View Source RX_NORMALIZE2 Normalize a string literal without characters before (remove characters after) Declaration public static readonly Regex RX_NORMALIZE2 Field Value Type Description Regex | Edit this page View Source RX_OPTIONS Default regular expression options Declaration public const RegexOptions RX_OPTIONS = Compiled | Singleline Field Value Type Description RegexOptions | Edit this page View Source RX_TIMEOUT_MS Regular expression timeout in ms Declaration public const int RX_TIMEOUT_MS = 3000 Field Value Type Description int | Edit this page View Source RX_TIMEOUT_S Regular expression timeout in seconds Declaration public const int RX_TIMEOUT_S = 3 Field Value Type Description int | Edit this page View Source STRING_LITERAL Regular expression to match a string literal Declaration public const string STRING_LITERAL = \"\\\\\\\"(\\\\\\\\.|[^\\\\\\\\\\\\\\\"])+[^\\\\\\\\]\\\\\\\"\" Field Value Type Description string Properties | Edit this page View Source Expression Regular expression Declaration [JsonIgnore] [NoValidation(false)] public Regex Expression { get; } Property Value Type Description Regex | Edit this page View Source Options Regular expression options Declaration public RegexOptions Options { get; init; } Property Value Type Description RegexOptions | Edit this page View Source Pattern Regular expression pattern Declaration public required string Pattern { get; init; } Property Value Type Description string | Edit this page View Source ReplaceOnly If this is a replacement-only pattern Declaration public bool ReplaceOnly { get; init; } Property Value Type Description bool | Edit this page View Source Replacement Replacement pattern (only if this is a post-processing expression, which won't be used for the matching pre-process) Declaration public string? Replacement { get; init; } Property Value Type Description string Implements IEquatable<T>"
  },
  "api/wan24.I8NTool.html": {
    "href": "api/wan24.I8NTool.html",
    "title": "Namespace wan24.I8NTool | wan24-I8N",
    "keywords": "Namespace wan24.I8NTool Classes I8NApi i8n API I8NToolAppConfig i8n tool app configuration I8NToolConfig i8n tool configuration KeywordExtractorApi PO extractor CLI API KeywordMatch Parser match KeywordMatch.Position Match position KeywordParserPattern i8n tool keyword parser pattern"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "wan24-I8N Wiki | wan24-I8N",
    "keywords": "wan24-I8N Wiki"
  },
  "index.html": {
    "href": "index.html",
    "title": "wan24-I8NTool | wan24-I8N",
    "keywords": "wan24-I8NTool This is a small dotnet tool for extracting stings to translate from source code and writing the result in the PO format to a file or STDOUT. It can also be used to create i8n files, which are easy to use from any app. It's pre-configured for use with the wan24-Core translation helpers for C#, but it can be customized easily for any environment and any programming language by customizing the used regular expressions in your own configuration file (find available presets in the config folder of this repository). Usage Where to get it This is a dotnet tool and can be installed from the command line: dotnet tool install -g wan24-I8NTool The default installation folder is %USER%\\.dotnet\\tools for Windows ~/.dotnet/tools for Linux (or MAC) NOTE: Please ensure that your global .NET tool path is in the PATH environment variable (open a new Windows terminal after adding the path using Settings -> System -> Extended system settings -> Extended -> Environment variables). Simple usage With pre-configuration for .NET: wan24I8NTool --input ./ > keywords.po You can find other pre-configurations in the config/*.json files in the GitHub repository: wan24I8NTool --config file.json --input ./ > keywords.po If you want to use advanced options, you can display help like this: wan24I8NTool help (--api API (--method METHOD)) (-details) For individual usage support, please open an issue here. NOTE: The wan4-Core CLI configuration (CliConfig) will be applied, so advanced configuration is possible using those special command line arguments. Default keyword extraction process Per default keywords will be found by the regular expressions you can find in config/dotnet.json. They'll then be post-processed by the replacement expressions, until the final quoted keyword was extracted from a line. These default translation method names can be parsed from source code: _ gettext(n|d)(\"...\" Translate(Plural)(\"...\" GetTerm(\"...\" There are also some attributes, which can define translated text: StdIn(\"...\" StdOut(\"...\" StdErr(\"...\" Description(\"...\" DisplayText(\"...\" And these attribute peoperty strings will also be parsed: Example = \"...\" ErrorMessage = \"...\" Finally, there are also attributes, which get the text to translate as a 2nd argument after a numeric argument: ExitCode(N, \"...\" NOTE: (Multiline) concatenated string value definitions (like @\"Part \\ a\" + $\"Part b {variable}\") or interpolations can't be parsed. The matched string literal must be JSON style escaped. To force including any string (from a constant definition, for example), simply add a comment wan24I8NTool:include at the end of the line - example: public const string NAME = \"Any PO included keyword\";// wan24I8NTool:include To force excluding any line, simply add a comment wan24I8NTool:exclude to that line - example: string text = gettext(\"Text file keyword\");// wan24I8NTool:exclude This will avoid including the text file ID Text file keyword (see below) as an additional term to translate into the catalog. Custom parser configuration In the config/dotnet.json file of this repository you find the default configuration. You can download and modify it for your needs, and use it with the --config parameter. Example parser JSON configuration: { \"SingleThread\": false,// (optional) Set to true to disable multithreading (may be overridden by -singleThread) \"Encoding\": \"UTF-8\",// (optional) Source encoding to use (default is UTF-8; may be overridden by --encoding) \"Patterns\": [// (optional) { // Matching only pattern \"Pattern\": \"Regular expression\",// Pattern for use with RegEx \"Options\": \"None\"// RegexOptions enumeration }, { // Matching and replacement pattern \"Pattern\": \"Regular expression\",// Pattern for use with RegEx \"Options\": \"None\",// RegexOptions enumeration \"Replacement\": \"$1\"// Replacement expression }, { // Replacement-only pattern \"Pattern\": \"Regular expression\",// Pattern for use with RegEx \"Options\": \"None\",// RegexOptions enumeration \"Replacement\": \"$1\",// Replacement expression \"ReplaceOnly\": true// Disable use for matching } ... ], \"FileExtensions\": [// (optional) File extensions to include when walking through a folder tree (may be overridden by --ext) \".ext\", ... ], \"TextFileExtensions\": [// (optional) Text file extensions to include when walking through a folder tree (may be overridden by --textFileExt) \".ext.txt\", ... ], \"MergeOutput\": true,// (optional) Merge the extracted keywords to the existing output PO file \"FailOnError\": true,// (optional) To fail thewhole process on any error \"Merge\": false// (optional) Set to true to merge your custom configuration with the default configuration } When loading the configuration, the pattern property Options will be extended by the SingleLine and Compiled default options. TIPP: You may use the variable %{rxStringLiteral} to match a double quoted string literal. The parser looks for any matching non-replacement-only expression, then applies all matching replacement expressions to refer to the keyword to use, finally. NOTE: The final keyword must be a valid JSON string literal in single or double quotes! During merging lists will be combined, and single options will be overwritten. There are some more optional keys for advanced configuration: Core: wan24-Core configuration using a AppConfig structure CLI: wan24-CLI configuration using a CliAppConfig structure About including text files The extractor API does also incude text files - per default filtered by: *.translate.txt (for simple text) *.translate.md (for MarkDown text) When doing so, you can address the translation using the filename without extensions as keyword - example for Info text.translate.txt: string text = _(\"Info text\");// wan24I8NTool:exclude The wan24I8NTool:exclude does tell the extractor to skip adding Info text as keyword to translate, because what you want to translate, is the text file content, but not the keyword used to load the translation in that case. Build, extract, display and use an i8n file i8n files contain optional compressed translation terms. They can be created from PO/MO and/or JSON dictionary (keyword as key, translation as an array of strings as value) or wan24-I8NKws input files like this: wan24I8NTool i8n -compress --poInput /path/to/input.po --output /path/to/output.i8n An i8n file can be embedded into an app, for example. To convert all *.json|po|mo|kws files in the current folder to *.i8n files: wan24I8NTool i8n buildmany -compress -verbose To display some i8n file informations: wan24I8NTool i8n display --input /path/to/input.i8n To extract some i8n file to a JSON file (prettified): wan24I8NTool i8n extract --input /path/to/input.i8n --jsonOutput /path/to/output.json To extract some i8n file to a PO file: wan24I8NTool i8n extract --input /path/to/input.i8n --poOutput /path/to/output.po To extract some i8n file to a wan24-I8NKws file: wan24I8NTool i8n extract --input /path/to/input.i8n --kwsOutput /path/to/output.kws NOTE: For more options and usage instructions please use the CLI API help (see below). TIPP: You can use the i8n API for converting, merging and validating the supported source formats also. In a .NET app you can use an i8n file using the wan24-I8N(-Compressed) NuGet packages and wan24-Core: // Uncompressed using the wan24-I8N NuGet package Translation.Current = new(await I8NTranslationTerms.FromStreamAsync(fileStream)); // Compressed using the wan24-I8N-Compressed NuGet package Translation.Current = new(await I8NCompressedTranslationTerms.FromStreamAsync(fileStream)); The FromStream(Async) methods also allow to specify, if there's no i8n header to read. Links to used NuGet packages: wan24-Core wan24-I8N wan24-I8N-Compressed i8n file structure in detail If you didn't skip writing a header during build, the first byte contains the version number and a flag (bit 8), if the body is compressed. The file body is a JSON encoded dictionary, having the keyword as ID, and the translations as value (an array of strings with none, one or multiple (plural) translations). If compressed, the wan24-Compression default compression algorithm was used. This is Brotli at the time of writing. But please note that wan24-Compression writes a non-standard header before the body, which is required for compatibility of newer wan24-Compression library versions with older compressed contents. NOTE: For using compressed i8n files, you'll have to use the wan24-Compression NuGet package in your .NET app for decompressing the body. Please see the I8NApi(.Internals).cs source code in this GitHub repository for C# code examples. TIPP: Use compression and the i8n header only, if you're using the i8n file from a .NET app. Without a header and compression you can simply deserialize the JSON dictionary from the i8n file using any modern programming language. Steps to i8n Internationalization (i8n) for apps is a common task to make string used in apps translatable. gettext is a tool which have been around for many years now and seem to satisfy developers, translators and end users. The steps to i8n your app are: use l10n methods in your code when you want to translate a term extract keywords (terms) from your source code into a PO file using an extractor translate the terms using an editor tool and create a MO file load the MO file using your apps gettext-supporting library wan24-I8NTool is a CLI tool which you can use as extractor to automatize things a bit more, and you're also free to use other translation file formats. If you'd like to use the i8n file format from wan24-I8NTool in your .NET app, the last step is replaced by: convert the PO/MO file to an i8n file using wan24-I8NTool load the i8n file using your .NET app using the wan24-I8N library This is one additional step, but maybe worth it, if you don't want to miss features like compressed i8n files ready-to-use i8n wan24-Core localization (l10n) features. You'll also not need to reference any gettext supporting library or do the parsing of the PO/MO format by yourself. You also may not need to reference the wan24-I8N(-Compressed) NuGet package, if you can manage to load the i8n structure by yourself (which is an easy task) - find examples in the wan24-I8N(-Compressed) projects in this repository. Links to useful NuGet packages: wan24-Core wan24-I8N wan24-I8N-Compressed"
  }
}