### YamlMime:ManagedReference
items:
- uid: wan24.I8NTool.KeywordParserPattern
  commentId: T:wan24.I8NTool.KeywordParserPattern
  id: KeywordParserPattern
  parent: wan24.I8NTool
  children:
  - wan24.I8NTool.KeywordParserPattern.#ctor
  - wan24.I8NTool.KeywordParserPattern.ATTRIBUTE_PROPERTIES
  - wan24.I8NTool.KeywordParserPattern.ATTRIBUTE_PROPERTIES_RPL
  - wan24.I8NTool.KeywordParserPattern.EXIT_CODE_ATTRIBUTE
  - wan24.I8NTool.KeywordParserPattern.EXIT_CODE_ATTRIBUTE_RPL
  - wan24.I8NTool.KeywordParserPattern.Expression
  - wan24.I8NTool.KeywordParserPattern.INCLUDE_STRINGS
  - wan24.I8NTool.KeywordParserPattern.INCLUDE_STRINGS_RPL
  - wan24.I8NTool.KeywordParserPattern.METHODS_AND_ATTRIBUTES
  - wan24.I8NTool.KeywordParserPattern.METHODS_AND_ATTRIBUTES_RPL
  - wan24.I8NTool.KeywordParserPattern.NORMALIZE1
  - wan24.I8NTool.KeywordParserPattern.NORMALIZE1_RPL
  - wan24.I8NTool.KeywordParserPattern.NORMALIZE2
  - wan24.I8NTool.KeywordParserPattern.NORMALIZE2_RPL
  - wan24.I8NTool.KeywordParserPattern.Options
  - wan24.I8NTool.KeywordParserPattern.Pattern
  - wan24.I8NTool.KeywordParserPattern.RX_ATTRIBUTE_PROPERTIES
  - wan24.I8NTool.KeywordParserPattern.RX_EXIT_CODE_ATTRIBUTE
  - wan24.I8NTool.KeywordParserPattern.RX_INCLUDE_STRINGS
  - wan24.I8NTool.KeywordParserPattern.RX_METHODS_AND_ATTRIBUTES
  - wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE1
  - wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE2
  - wan24.I8NTool.KeywordParserPattern.RX_OPTIONS
  - wan24.I8NTool.KeywordParserPattern.RX_TIMEOUT_MS
  - wan24.I8NTool.KeywordParserPattern.RX_TIMEOUT_S
  - wan24.I8NTool.KeywordParserPattern.ReplaceOnly
  - wan24.I8NTool.KeywordParserPattern.Replacement
  - wan24.I8NTool.KeywordParserPattern.STRING_LITERAL
  langs:
  - csharp
  - vb
  name: KeywordParserPattern
  nameWithType: KeywordParserPattern
  fullName: wan24.I8NTool.KeywordParserPattern
  type: Class
  source:
    id: KeywordParserPattern
    path: System.Text.RegularExpressions.Generator/System.Text.RegularExpressions.Generator.RegexGenerator/RegexGenerator.g.cs
    startLine: 213
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: i8n tool keyword parser pattern
  example: []
  syntax:
    content: 'public sealed record KeywordParserPattern : IEquatable<KeywordParserPattern>'
    content.vb: Public NotInheritable Class KeywordParserPattern Implements IEquatable(Of KeywordParserPattern)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{wan24.I8NTool.KeywordParserPattern}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: wan24.I8NTool.KeywordParserPattern.#ctor
  commentId: M:wan24.I8NTool.KeywordParserPattern.#ctor
  id: '#ctor'
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: KeywordParserPattern()
  nameWithType: KeywordParserPattern.KeywordParserPattern()
  fullName: wan24.I8NTool.KeywordParserPattern.KeywordParserPattern()
  type: Constructor
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: .ctor
    path: ../wan24-I8NTool CLI/KeywordParserPattern.cs
    startLine: 24
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Constructor
  example: []
  syntax:
    content: public KeywordParserPattern()
    content.vb: Public Sub New()
  overload: wan24.I8NTool.KeywordParserPattern.#ctor*
  nameWithType.vb: KeywordParserPattern.New()
  fullName.vb: wan24.I8NTool.KeywordParserPattern.New()
  name.vb: New()
- uid: wan24.I8NTool.KeywordParserPattern.Pattern
  commentId: P:wan24.I8NTool.KeywordParserPattern.Pattern
  id: Pattern
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: Pattern
  nameWithType: KeywordParserPattern.Pattern
  fullName: wan24.I8NTool.KeywordParserPattern.Pattern
  type: Property
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: Pattern
    path: ../wan24-I8NTool CLI/KeywordParserPattern.cs
    startLine: 29
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Regular expression pattern
  example: []
  syntax:
    content: public required string Pattern { get; init; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Pattern As String
  overload: wan24.I8NTool.KeywordParserPattern.Pattern*
- uid: wan24.I8NTool.KeywordParserPattern.Options
  commentId: P:wan24.I8NTool.KeywordParserPattern.Options
  id: Options
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: KeywordParserPattern.Options
  fullName: wan24.I8NTool.KeywordParserPattern.Options
  type: Property
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: Options
    path: ../wan24-I8NTool CLI/KeywordParserPattern.cs
    startLine: 34
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Regular expression options
  example: []
  syntax:
    content: public RegexOptions Options { get; init; }
    parameters: []
    return:
      type: System.Text.RegularExpressions.RegexOptions
    content.vb: Public Property Options As RegexOptions
  overload: wan24.I8NTool.KeywordParserPattern.Options*
- uid: wan24.I8NTool.KeywordParserPattern.Expression
  commentId: P:wan24.I8NTool.KeywordParserPattern.Expression
  id: Expression
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: KeywordParserPattern.Expression
  fullName: wan24.I8NTool.KeywordParserPattern.Expression
  type: Property
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: Expression
    path: ../wan24-I8NTool CLI/KeywordParserPattern.cs
    startLine: 39
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Regular expression
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      [NoValidation(false)]

      public Regex Expression { get; }
    parameters: []
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: >-
      <JsonIgnore>

      <NoValidation(False)>

      Public Property Expression As Regex
  overload: wan24.I8NTool.KeywordParserPattern.Expression*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
  - type: wan24.ObjectValidation.NoValidationAttribute
    ctor: wan24.ObjectValidation.NoValidationAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: wan24.I8NTool.KeywordParserPattern.Replacement
  commentId: P:wan24.I8NTool.KeywordParserPattern.Replacement
  id: Replacement
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: Replacement
  nameWithType: KeywordParserPattern.Replacement
  fullName: wan24.I8NTool.KeywordParserPattern.Replacement
  type: Property
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: Replacement
    path: ../wan24-I8NTool CLI/KeywordParserPattern.cs
    startLine: 56
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Replacement pattern (only if this is a post-processing expression, which won't be used for the matching pre-process)
  example: []
  syntax:
    content: public string? Replacement { get; init; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Replacement As String
  overload: wan24.I8NTool.KeywordParserPattern.Replacement*
- uid: wan24.I8NTool.KeywordParserPattern.ReplaceOnly
  commentId: P:wan24.I8NTool.KeywordParserPattern.ReplaceOnly
  id: ReplaceOnly
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: ReplaceOnly
  nameWithType: KeywordParserPattern.ReplaceOnly
  fullName: wan24.I8NTool.KeywordParserPattern.ReplaceOnly
  type: Property
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: ReplaceOnly
    path: ../wan24-I8NTool CLI/KeywordParserPattern.cs
    startLine: 61
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: If this is a replacement-only pattern
  example: []
  syntax:
    content: public bool ReplaceOnly { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ReplaceOnly As Boolean
  overload: wan24.I8NTool.KeywordParserPattern.ReplaceOnly*
- uid: wan24.I8NTool.KeywordParserPattern.RX_TIMEOUT_MS
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_TIMEOUT_MS
  id: RX_TIMEOUT_MS
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: RX_TIMEOUT_MS
  nameWithType: KeywordParserPattern.RX_TIMEOUT_MS
  fullName: wan24.I8NTool.KeywordParserPattern.RX_TIMEOUT_MS
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: RX_TIMEOUT_MS
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 10
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Regular expression timeout in ms
  example: []
  syntax:
    content: public const int RX_TIMEOUT_MS = 3000
    return:
      type: System.Int32
    content.vb: Public Const RX_TIMEOUT_MS As Integer = 3000
- uid: wan24.I8NTool.KeywordParserPattern.RX_TIMEOUT_S
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_TIMEOUT_S
  id: RX_TIMEOUT_S
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: RX_TIMEOUT_S
  nameWithType: KeywordParserPattern.RX_TIMEOUT_S
  fullName: wan24.I8NTool.KeywordParserPattern.RX_TIMEOUT_S
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: RX_TIMEOUT_S
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 14
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Regular expression timeout in seconds
  example: []
  syntax:
    content: public const int RX_TIMEOUT_S = 3
    return:
      type: System.Int32
    content.vb: Public Const RX_TIMEOUT_S As Integer = 3
- uid: wan24.I8NTool.KeywordParserPattern.RX_OPTIONS
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_OPTIONS
  id: RX_OPTIONS
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: RX_OPTIONS
  nameWithType: KeywordParserPattern.RX_OPTIONS
  fullName: wan24.I8NTool.KeywordParserPattern.RX_OPTIONS
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: RX_OPTIONS
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 18
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Default regular expression options
  example: []
  syntax:
    content: public const RegexOptions RX_OPTIONS = Compiled | Singleline
    return:
      type: System.Text.RegularExpressions.RegexOptions
    content.vb: Public Const RX_OPTIONS As RegexOptions = Compiled Or Singleline
- uid: wan24.I8NTool.KeywordParserPattern.NORMALIZE1
  commentId: F:wan24.I8NTool.KeywordParserPattern.NORMALIZE1
  id: NORMALIZE1
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: NORMALIZE1
  nameWithType: KeywordParserPattern.NORMALIZE1
  fullName: wan24.I8NTool.KeywordParserPattern.NORMALIZE1
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: NORMALIZE1
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 22
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Normalize a string literal (remove characters before and maybe after)
  example: []
  syntax:
    content: public const string NORMALIZE1 = "^.*[^\\@\\$\\\"\\\\](\\\"(\\\\.|[^\\\\\\\"])+[^\\\\]\\\").*$"
    return:
      type: System.String
    content.vb: Public Const NORMALIZE1 As String = "^.*[^\@\$\""\\](\""(\\.|[^\\\""])+[^\\]\"").*$"
- uid: wan24.I8NTool.KeywordParserPattern.NORMALIZE2
  commentId: F:wan24.I8NTool.KeywordParserPattern.NORMALIZE2
  id: NORMALIZE2
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: NORMALIZE2
  nameWithType: KeywordParserPattern.NORMALIZE2
  fullName: wan24.I8NTool.KeywordParserPattern.NORMALIZE2
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: NORMALIZE2
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 26
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Normalize a string literal without characters before (remove characters after)
  example: []
  syntax:
    content: public const string NORMALIZE2 = "^(\\\"(\\\\.|[^\\\\\\\"])+[^\\\\]\\\").+$"
    return:
      type: System.String
    content.vb: Public Const NORMALIZE2 As String = "^(\""(\\.|[^\\\""])+[^\\]\"").+$"
- uid: wan24.I8NTool.KeywordParserPattern.METHODS_AND_ATTRIBUTES
  commentId: F:wan24.I8NTool.KeywordParserPattern.METHODS_AND_ATTRIBUTES
  id: METHODS_AND_ATTRIBUTES
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: METHODS_AND_ATTRIBUTES
  nameWithType: KeywordParserPattern.METHODS_AND_ATTRIBUTES
  fullName: wan24.I8NTool.KeywordParserPattern.METHODS_AND_ATTRIBUTES
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: METHODS_AND_ATTRIBUTES
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 30
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Methods and attributes
  example: []
  syntax:
    content: public const string METHODS_AND_ATTRIBUTES = "^.*(_+|gettext[nd]?|Translate(Plural)?|GetTerm|Std(In|OutErr)|Description|DisplayText)\\s*\\(\\s*(\\\"(\\\\.|[^\\\\\\\"])+[^\\\\]\\\").*$"
    return:
      type: System.String
    content.vb: Public Const METHODS_AND_ATTRIBUTES As String = "^.*(_+|gettext[nd]?|Translate(Plural)?|GetTerm|Std(In|OutErr)|Description|DisplayText)\s*\(\s*(\""(\\.|[^\\\""])+[^\\]\"").*$"
- uid: wan24.I8NTool.KeywordParserPattern.ATTRIBUTE_PROPERTIES
  commentId: F:wan24.I8NTool.KeywordParserPattern.ATTRIBUTE_PROPERTIES
  id: ATTRIBUTE_PROPERTIES
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: ATTRIBUTE_PROPERTIES
  nameWithType: KeywordParserPattern.ATTRIBUTE_PROPERTIES
  fullName: wan24.I8NTool.KeywordParserPattern.ATTRIBUTE_PROPERTIES
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: ATTRIBUTE_PROPERTIES
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 34
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Attribute properties
  example: []
  syntax:
    content: public const string ATTRIBUTE_PROPERTIES = "^.*\\(.*(Example|ErrorMessage)\\s*\\=\\s*(\\\"(\\\\.|[^\\\\\\\"])+[^\\\\]\\\").*$"
    return:
      type: System.String
    content.vb: Public Const ATTRIBUTE_PROPERTIES As String = "^.*\(.*(Example|ErrorMessage)\s*\=\s*(\""(\\.|[^\\\""])+[^\\]\"").*$"
- uid: wan24.I8NTool.KeywordParserPattern.EXIT_CODE_ATTRIBUTE
  commentId: F:wan24.I8NTool.KeywordParserPattern.EXIT_CODE_ATTRIBUTE
  id: EXIT_CODE_ATTRIBUTE
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: EXIT_CODE_ATTRIBUTE
  nameWithType: KeywordParserPattern.EXIT_CODE_ATTRIBUTE
  fullName: wan24.I8NTool.KeywordParserPattern.EXIT_CODE_ATTRIBUTE
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: EXIT_CODE_ATTRIBUTE
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 38
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Exit code attribute
  example: []
  syntax:
    content: public const string EXIT_CODE_ATTRIBUTE = "^.*ExitCode[^\\(]*\\(\\d+\\s*,\\s*(\\\"(\\\\.|[^\\\\\\\"])+[^\\\\]\\\").*$"
    return:
      type: System.String
    content.vb: Public Const EXIT_CODE_ATTRIBUTE As String = "^.*ExitCode[^\(]*\(\d+\s*,\s*(\""(\\.|[^\\\""])+[^\\]\"").*$"
- uid: wan24.I8NTool.KeywordParserPattern.INCLUDE_STRINGS
  commentId: F:wan24.I8NTool.KeywordParserPattern.INCLUDE_STRINGS
  id: INCLUDE_STRINGS
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: INCLUDE_STRINGS
  nameWithType: KeywordParserPattern.INCLUDE_STRINGS
  fullName: wan24.I8NTool.KeywordParserPattern.INCLUDE_STRINGS
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: INCLUDE_STRINGS
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 42
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Include strings
  example: []
  syntax:
    content: public const string INCLUDE_STRINGS = "^.*[^\\@\\$\\\"\\\\](\\\"(\\\\.|[^\\\\\\\"])+[^\\\\]\\\").*wan24I8NTool\\:include.*$"
    return:
      type: System.String
    content.vb: Public Const INCLUDE_STRINGS As String = "^.*[^\@\$\""\\](\""(\\.|[^\\\""])+[^\\]\"").*wan24I8NTool\:include.*$"
- uid: wan24.I8NTool.KeywordParserPattern.STRING_LITERAL
  commentId: F:wan24.I8NTool.KeywordParserPattern.STRING_LITERAL
  id: STRING_LITERAL
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: STRING_LITERAL
  nameWithType: KeywordParserPattern.STRING_LITERAL
  fullName: wan24.I8NTool.KeywordParserPattern.STRING_LITERAL
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: STRING_LITERAL
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 46
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Regular expression to match a string literal
  example: []
  syntax:
    content: public const string STRING_LITERAL = "\\\"(\\\\.|[^\\\\\\\"])+[^\\\\]\\\""
    return:
      type: System.String
    content.vb: Public Const STRING_LITERAL As String = "\""(\\.|[^\\\""])+[^\\]\"""
- uid: wan24.I8NTool.KeywordParserPattern.NORMALIZE1_RPL
  commentId: F:wan24.I8NTool.KeywordParserPattern.NORMALIZE1_RPL
  id: NORMALIZE1_RPL
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: NORMALIZE1_RPL
  nameWithType: KeywordParserPattern.NORMALIZE1_RPL
  fullName: wan24.I8NTool.KeywordParserPattern.NORMALIZE1_RPL
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: NORMALIZE1_RPL
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 50
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Replacement for <xref href="wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE1" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public const string NORMALIZE1_RPL = "$1"
    return:
      type: System.String
    content.vb: Public Const NORMALIZE1_RPL As String = "$1"
- uid: wan24.I8NTool.KeywordParserPattern.NORMALIZE2_RPL
  commentId: F:wan24.I8NTool.KeywordParserPattern.NORMALIZE2_RPL
  id: NORMALIZE2_RPL
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: NORMALIZE2_RPL
  nameWithType: KeywordParserPattern.NORMALIZE2_RPL
  fullName: wan24.I8NTool.KeywordParserPattern.NORMALIZE2_RPL
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: NORMALIZE2_RPL
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 54
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Replacelement for <xref href="wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE2" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public const string NORMALIZE2_RPL = "$1"
    return:
      type: System.String
    content.vb: Public Const NORMALIZE2_RPL As String = "$1"
- uid: wan24.I8NTool.KeywordParserPattern.METHODS_AND_ATTRIBUTES_RPL
  commentId: F:wan24.I8NTool.KeywordParserPattern.METHODS_AND_ATTRIBUTES_RPL
  id: METHODS_AND_ATTRIBUTES_RPL
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: METHODS_AND_ATTRIBUTES_RPL
  nameWithType: KeywordParserPattern.METHODS_AND_ATTRIBUTES_RPL
  fullName: wan24.I8NTool.KeywordParserPattern.METHODS_AND_ATTRIBUTES_RPL
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: METHODS_AND_ATTRIBUTES_RPL
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 58
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Replacement for <xref href="wan24.I8NTool.KeywordParserPattern.RX_METHODS_AND_ATTRIBUTES" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public const string METHODS_AND_ATTRIBUTES_RPL = "$4"
    return:
      type: System.String
    content.vb: Public Const METHODS_AND_ATTRIBUTES_RPL As String = "$4"
- uid: wan24.I8NTool.KeywordParserPattern.ATTRIBUTE_PROPERTIES_RPL
  commentId: F:wan24.I8NTool.KeywordParserPattern.ATTRIBUTE_PROPERTIES_RPL
  id: ATTRIBUTE_PROPERTIES_RPL
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: ATTRIBUTE_PROPERTIES_RPL
  nameWithType: KeywordParserPattern.ATTRIBUTE_PROPERTIES_RPL
  fullName: wan24.I8NTool.KeywordParserPattern.ATTRIBUTE_PROPERTIES_RPL
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: ATTRIBUTE_PROPERTIES_RPL
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 62
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Replacement for <xref href="wan24.I8NTool.KeywordParserPattern.RX_ATTRIBUTE_PROPERTIES" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public const string ATTRIBUTE_PROPERTIES_RPL = "$2"
    return:
      type: System.String
    content.vb: Public Const ATTRIBUTE_PROPERTIES_RPL As String = "$2"
- uid: wan24.I8NTool.KeywordParserPattern.EXIT_CODE_ATTRIBUTE_RPL
  commentId: F:wan24.I8NTool.KeywordParserPattern.EXIT_CODE_ATTRIBUTE_RPL
  id: EXIT_CODE_ATTRIBUTE_RPL
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: EXIT_CODE_ATTRIBUTE_RPL
  nameWithType: KeywordParserPattern.EXIT_CODE_ATTRIBUTE_RPL
  fullName: wan24.I8NTool.KeywordParserPattern.EXIT_CODE_ATTRIBUTE_RPL
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: EXIT_CODE_ATTRIBUTE_RPL
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 66
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Replacement for <xref href="wan24.I8NTool.KeywordParserPattern.RX_EXIT_CODE_ATTRIBUTE" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public const string EXIT_CODE_ATTRIBUTE_RPL = "$1"
    return:
      type: System.String
    content.vb: Public Const EXIT_CODE_ATTRIBUTE_RPL As String = "$1"
- uid: wan24.I8NTool.KeywordParserPattern.INCLUDE_STRINGS_RPL
  commentId: F:wan24.I8NTool.KeywordParserPattern.INCLUDE_STRINGS_RPL
  id: INCLUDE_STRINGS_RPL
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: INCLUDE_STRINGS_RPL
  nameWithType: KeywordParserPattern.INCLUDE_STRINGS_RPL
  fullName: wan24.I8NTool.KeywordParserPattern.INCLUDE_STRINGS_RPL
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: INCLUDE_STRINGS_RPL
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 70
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Replacement for <xref href="wan24.I8NTool.KeywordParserPattern.RX_INCLUDE_STRINGS" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public const string INCLUDE_STRINGS_RPL = "$1"
    return:
      type: System.String
    content.vb: Public Const INCLUDE_STRINGS_RPL As String = "$1"
- uid: wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE1
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE1
  id: RX_NORMALIZE1
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: RX_NORMALIZE1
  nameWithType: KeywordParserPattern.RX_NORMALIZE1
  fullName: wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE1
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: RX_NORMALIZE1
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 82
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Normalize a string literal (remove characters before and maybe after)
  example: []
  syntax:
    content: public static readonly Regex RX_NORMALIZE1
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Public Shared ReadOnly RX_NORMALIZE1 As Regex
- uid: wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE2
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE2
  id: RX_NORMALIZE2
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: RX_NORMALIZE2
  nameWithType: KeywordParserPattern.RX_NORMALIZE2
  fullName: wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE2
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: RX_NORMALIZE2
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 86
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Normalize a string literal without characters before (remove characters after)
  example: []
  syntax:
    content: public static readonly Regex RX_NORMALIZE2
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Public Shared ReadOnly RX_NORMALIZE2 As Regex
- uid: wan24.I8NTool.KeywordParserPattern.RX_METHODS_AND_ATTRIBUTES
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_METHODS_AND_ATTRIBUTES
  id: RX_METHODS_AND_ATTRIBUTES
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: RX_METHODS_AND_ATTRIBUTES
  nameWithType: KeywordParserPattern.RX_METHODS_AND_ATTRIBUTES
  fullName: wan24.I8NTool.KeywordParserPattern.RX_METHODS_AND_ATTRIBUTES
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: RX_METHODS_AND_ATTRIBUTES
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 90
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Methods and attributes
  example: []
  syntax:
    content: public static readonly Regex RX_METHODS_AND_ATTRIBUTES
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Public Shared ReadOnly RX_METHODS_AND_ATTRIBUTES As Regex
- uid: wan24.I8NTool.KeywordParserPattern.RX_ATTRIBUTE_PROPERTIES
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_ATTRIBUTE_PROPERTIES
  id: RX_ATTRIBUTE_PROPERTIES
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: RX_ATTRIBUTE_PROPERTIES
  nameWithType: KeywordParserPattern.RX_ATTRIBUTE_PROPERTIES
  fullName: wan24.I8NTool.KeywordParserPattern.RX_ATTRIBUTE_PROPERTIES
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: RX_ATTRIBUTE_PROPERTIES
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 94
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Attribute properties
  example: []
  syntax:
    content: public static readonly Regex RX_ATTRIBUTE_PROPERTIES
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Public Shared ReadOnly RX_ATTRIBUTE_PROPERTIES As Regex
- uid: wan24.I8NTool.KeywordParserPattern.RX_EXIT_CODE_ATTRIBUTE
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_EXIT_CODE_ATTRIBUTE
  id: RX_EXIT_CODE_ATTRIBUTE
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: RX_EXIT_CODE_ATTRIBUTE
  nameWithType: KeywordParserPattern.RX_EXIT_CODE_ATTRIBUTE
  fullName: wan24.I8NTool.KeywordParserPattern.RX_EXIT_CODE_ATTRIBUTE
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: RX_EXIT_CODE_ATTRIBUTE
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 98
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Exit code attribute
  example: []
  syntax:
    content: public static readonly Regex RX_EXIT_CODE_ATTRIBUTE
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Public Shared ReadOnly RX_EXIT_CODE_ATTRIBUTE As Regex
- uid: wan24.I8NTool.KeywordParserPattern.RX_INCLUDE_STRINGS
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_INCLUDE_STRINGS
  id: RX_INCLUDE_STRINGS
  parent: wan24.I8NTool.KeywordParserPattern
  langs:
  - csharp
  - vb
  name: RX_INCLUDE_STRINGS
  nameWithType: KeywordParserPattern.RX_INCLUDE_STRINGS
  fullName: wan24.I8NTool.KeywordParserPattern.RX_INCLUDE_STRINGS
  type: Field
  source:
    remote:
      path: src/wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
      branch: main
      repo: https://github.com/nd1012/wan24-I8NTool
    id: RX_INCLUDE_STRINGS
    path: ../wan24-I8NTool CLI/KeywordParserPattern.Regex.cs
    startLine: 102
  assemblies:
  - wan24I8NTool
  namespace: wan24.I8NTool
  summary: Include strings
  example: []
  syntax:
    content: public static readonly Regex RX_INCLUDE_STRINGS
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Public Shared ReadOnly RX_INCLUDE_STRINGS As Regex
references:
- uid: wan24.I8NTool
  commentId: N:wan24.I8NTool
  href: wan24.html
  name: wan24.I8NTool
  nameWithType: wan24.I8NTool
  fullName: wan24.I8NTool
  spec.csharp:
  - uid: wan24
    name: wan24
    href: wan24.html
  - name: .
  - uid: wan24.I8NTool
    name: I8NTool
    href: wan24.I8NTool.html
  spec.vb:
  - uid: wan24
    name: wan24
    href: wan24.html
  - name: .
  - uid: wan24.I8NTool
    name: I8NTool
    href: wan24.I8NTool.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{wan24.I8NTool.KeywordParserPattern}
  commentId: T:System.IEquatable{wan24.I8NTool.KeywordParserPattern}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<KeywordParserPattern>
  nameWithType: IEquatable<KeywordParserPattern>
  fullName: System.IEquatable<wan24.I8NTool.KeywordParserPattern>
  nameWithType.vb: IEquatable(Of KeywordParserPattern)
  fullName.vb: System.IEquatable(Of wan24.I8NTool.KeywordParserPattern)
  name.vb: IEquatable(Of KeywordParserPattern)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: wan24.I8NTool.KeywordParserPattern
    name: KeywordParserPattern
    href: wan24.I8NTool.KeywordParserPattern.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: wan24.I8NTool.KeywordParserPattern
    name: KeywordParserPattern
    href: wan24.I8NTool.KeywordParserPattern.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: wan24.I8NTool.KeywordParserPattern.#ctor*
  commentId: Overload:wan24.I8NTool.KeywordParserPattern.#ctor
  href: wan24.I8NTool.KeywordParserPattern.html#wan24_I8NTool_KeywordParserPattern__ctor
  name: KeywordParserPattern
  nameWithType: KeywordParserPattern.KeywordParserPattern
  fullName: wan24.I8NTool.KeywordParserPattern.KeywordParserPattern
  nameWithType.vb: KeywordParserPattern.New
  fullName.vb: wan24.I8NTool.KeywordParserPattern.New
  name.vb: New
- uid: wan24.I8NTool.KeywordParserPattern.Pattern*
  commentId: Overload:wan24.I8NTool.KeywordParserPattern.Pattern
  href: wan24.I8NTool.KeywordParserPattern.html#wan24_I8NTool_KeywordParserPattern_Pattern
  name: Pattern
  nameWithType: KeywordParserPattern.Pattern
  fullName: wan24.I8NTool.KeywordParserPattern.Pattern
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: wan24.I8NTool.KeywordParserPattern.Options*
  commentId: Overload:wan24.I8NTool.KeywordParserPattern.Options
  href: wan24.I8NTool.KeywordParserPattern.html#wan24_I8NTool_KeywordParserPattern_Options
  name: Options
  nameWithType: KeywordParserPattern.Options
  fullName: wan24.I8NTool.KeywordParserPattern.Options
- uid: System.Text.RegularExpressions.RegexOptions
  commentId: T:System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regexoptions
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
- uid: wan24.I8NTool.KeywordParserPattern.Expression*
  commentId: Overload:wan24.I8NTool.KeywordParserPattern.Expression
  href: wan24.I8NTool.KeywordParserPattern.html#wan24_I8NTool_KeywordParserPattern_Expression
  name: Expression
  nameWithType: KeywordParserPattern.Expression
  fullName: wan24.I8NTool.KeywordParserPattern.Expression
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: wan24.I8NTool.KeywordParserPattern.Replacement*
  commentId: Overload:wan24.I8NTool.KeywordParserPattern.Replacement
  href: wan24.I8NTool.KeywordParserPattern.html#wan24_I8NTool_KeywordParserPattern_Replacement
  name: Replacement
  nameWithType: KeywordParserPattern.Replacement
  fullName: wan24.I8NTool.KeywordParserPattern.Replacement
- uid: wan24.I8NTool.KeywordParserPattern.ReplaceOnly*
  commentId: Overload:wan24.I8NTool.KeywordParserPattern.ReplaceOnly
  href: wan24.I8NTool.KeywordParserPattern.html#wan24_I8NTool_KeywordParserPattern_ReplaceOnly
  name: ReplaceOnly
  nameWithType: KeywordParserPattern.ReplaceOnly
  fullName: wan24.I8NTool.KeywordParserPattern.ReplaceOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE1
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE1
  href: wan24.I8NTool.KeywordParserPattern.html#wan24_I8NTool_KeywordParserPattern_RX_NORMALIZE1
  name: RX_NORMALIZE1
  nameWithType: KeywordParserPattern.RX_NORMALIZE1
  fullName: wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE1
- uid: wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE2
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE2
  href: wan24.I8NTool.KeywordParserPattern.html#wan24_I8NTool_KeywordParserPattern_RX_NORMALIZE2
  name: RX_NORMALIZE2
  nameWithType: KeywordParserPattern.RX_NORMALIZE2
  fullName: wan24.I8NTool.KeywordParserPattern.RX_NORMALIZE2
- uid: wan24.I8NTool.KeywordParserPattern.RX_METHODS_AND_ATTRIBUTES
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_METHODS_AND_ATTRIBUTES
  href: wan24.I8NTool.KeywordParserPattern.html#wan24_I8NTool_KeywordParserPattern_RX_METHODS_AND_ATTRIBUTES
  name: RX_METHODS_AND_ATTRIBUTES
  nameWithType: KeywordParserPattern.RX_METHODS_AND_ATTRIBUTES
  fullName: wan24.I8NTool.KeywordParserPattern.RX_METHODS_AND_ATTRIBUTES
- uid: wan24.I8NTool.KeywordParserPattern.RX_ATTRIBUTE_PROPERTIES
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_ATTRIBUTE_PROPERTIES
  href: wan24.I8NTool.KeywordParserPattern.html#wan24_I8NTool_KeywordParserPattern_RX_ATTRIBUTE_PROPERTIES
  name: RX_ATTRIBUTE_PROPERTIES
  nameWithType: KeywordParserPattern.RX_ATTRIBUTE_PROPERTIES
  fullName: wan24.I8NTool.KeywordParserPattern.RX_ATTRIBUTE_PROPERTIES
- uid: wan24.I8NTool.KeywordParserPattern.RX_EXIT_CODE_ATTRIBUTE
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_EXIT_CODE_ATTRIBUTE
  href: wan24.I8NTool.KeywordParserPattern.html#wan24_I8NTool_KeywordParserPattern_RX_EXIT_CODE_ATTRIBUTE
  name: RX_EXIT_CODE_ATTRIBUTE
  nameWithType: KeywordParserPattern.RX_EXIT_CODE_ATTRIBUTE
  fullName: wan24.I8NTool.KeywordParserPattern.RX_EXIT_CODE_ATTRIBUTE
- uid: wan24.I8NTool.KeywordParserPattern.RX_INCLUDE_STRINGS
  commentId: F:wan24.I8NTool.KeywordParserPattern.RX_INCLUDE_STRINGS
  href: wan24.I8NTool.KeywordParserPattern.html#wan24_I8NTool_KeywordParserPattern_RX_INCLUDE_STRINGS
  name: RX_INCLUDE_STRINGS
  nameWithType: KeywordParserPattern.RX_INCLUDE_STRINGS
  fullName: wan24.I8NTool.KeywordParserPattern.RX_INCLUDE_STRINGS
